name: Sync Fork Repositories

on:
  #   schedule:
  #     - cron: "*/10 * * * *" # 每 10 分钟触发一次
  workflow_dispatch:
  repository_dispatch:
jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Read repos.txt and sync forks
        env:
          PAT: ${{ secrets.PAT }}
        continue-on-error: true
        run: |
          function NO_OUTPUT() {
              "$@" >/dev/null 2>&1
              return "$?"
          }

          function sync() {
            local upstream=$1
            local upstream_branch=$2
            local fork=$3
            local fork_branch=$4

            local upstream_url="https://$PAT@github.com/$upstream.git"
            local fork_url="https://$PAT@github.com/$fork.git"

            echo "[${fork}:${fork_branch}] Syncing from [${upstream}:${upstream_branch}]"

            local temp_dir=$(mktemp -d -t ci-XXXXXXXXXX)

            # Clone the forked repository
            if ! NO_OUTPUT git clone --single-branch --branch $upstream_branch $upstream_url "$temp_dir" ; then
              echo "[${fork}:${fork_branch}] Failed to clone [${upstream}:${upstream_branch}]"
              return 1
            fi

            cd "$temp_dir"

            # Add the fork repository
            NO_OUTPUT git remote add fork $fork_url

            # Push
            if NO_OUTPUT git push fork $upstream_branch:$fork_branch --force ; then
                echo "[${fork}:${fork_branch}] Synced"
                return 0
            else
                echo "[${fork}:${fork_branch}] Failed"
                return 1
            fi
          }

          PIDS=()

          while IFS= read -r line || [[ -n "$line" ]]; do
            IFS=':' read -r upstream upstream_branch fork fork_branch <<< "$line"
              sync $upstream $upstream_branch $fork $fork_branch &
              PIDS+=($!)
          done < repos.txt

          for PID in "${PIDS[@]}"; do
            wait $PID
          done
